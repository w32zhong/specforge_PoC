FROM nvcr.io/nvidia/cuda:12.9.1-cudnn-devel-ubuntu20.04
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /workspace
# install utilities
RUN apt update && apt install -y build-essential git tmux ncdu vim npm curl wget
# ensure UTF-8 locale is generated
RUN apt-get install -y locales && \
    sed -i 's/^# *en_US.UTF-8/en_US.UTF-8/' /etc/locale.gen && \
    locale-gen
# setup dotfiles
RUN bash -c "git clone https://github.com/t-k-cloud/tkarch.git && \
    pushd tkarch && cd dotfiles && ./overwrite.sh && \
    popd"
# install python3.12
RUN apt install -y zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev liblzma-dev \
    libssl-dev libsqlite3-dev libreadline-dev libffi-dev libbz2-dev pkg-config \
    && wget https://www.python.org/ftp/python/3.12.1/Python-3.12.1.tgz \
    && tar -xf Python-*.tgz && rm Python-*.tgz && cd Python-3.12.1 \
    && ./configure --enable-optimizations && make install
RUN wget https://bootstrap.pypa.io/get-pip.py \
    && python3 get-pip.py && rm get-pip.py \
    && ln -sf /usr/local/bin/python3 /usr/bin/python
# install python utilities
RUN python -m pip install --no-cache-dir --upgrade \
    pip setuptools nvitop fire packaging
# install nvim
RUN apt install -y cmake && git clone --depth 1 -b v0.11.4 https://github.com/neovim/neovim && \
    cd neovim && make CMAKE_BUILD_TYPE=Release && make install && cd .. && rm -rf neovim
# install node and Python LSP
RUN wget https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh && \
    bash install.sh && bash -c 'source ~/.nvm/nvm.sh && nvm install v24.5.0' && rm install.sh
RUN npm install -g pyright
# OpenAI codex
RUN npm install -g @openai/codex
########################## FINISH BASE ENVIRONMENT BUILD #####################################
# sglang
RUN apt install -y libnuma1 libnuma-dev # some missing system libs
RUN git clone --depth=1 -b v0.5.2 https://github.com/sgl-project/sglang.git && \
    cd sglang/python && pip install . && pip install ".[srt]" # SGLang Run Time
# specforge_PoC
RUN wget https://raw.githubusercontent.com/w32zhong/specforge_PoC/refs/heads/master/specforge_het/requirements.txt -O r.txt
RUN bash -c "pip install -r <(grep -v -i '^transformers\b' r.txt)" # transformers version is up to SGLang
# rpdb
RUN apt install -y rlwrap socat && pip install rpdb
